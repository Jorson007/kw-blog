(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{443:function(t,s,_){"use strict";_.r(s);var v=_(56),r=Object(v.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"走进音视频大门"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#走进音视频大门"}},[t._v("#")]),t._v(" 走进音视频大门")]),t._v(" "),_("p",[t._v("走进音视频大门首先就得搬出这样一张图，来看看音视频如何从采集到呈现在我们眼前的：")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://www.52im.net/data/attachment/forum/202011/12/135758i887r2z5ukwrhrei.png",alt:"音视频播放原理"}})]),t._v(" "),_("h3",{attrs:{id:"图像基础知识"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#图像基础知识"}},[t._v("#")]),t._v(" 图像基础知识")]),t._v(" "),_("ol",[_("li",[t._v("什么是分辨率")])]),t._v(" "),_("blockquote",[_("p",[t._v('分辨率是以横向和纵向的像素数量来衡量的，表示平面图像的精细程度。视频精细程度并不只取决于视频分辨率，还取决于屏幕分辨率。\n1080P 的 P 指 Progressive scan（逐行扫描），即垂直方向像素点，也就是 "高"，所以 1920 * 1080 叫 1080P， 不叫 1920P。')])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("上采样和下采样")])]),t._v(" "),_("blockquote",[_("p",[t._v("上采样:当 720P 的视频在 1080P 屏幕上播放时，需要将图像放大，放大操作也叫上采样。“上采样”几乎都是采用内插值方法，即在原有图像的像素点之间采用合适的插值算法插入新的元素，所以图像放大也称为图像插值。")])]),t._v(" "),_("blockquote",[_("p",[t._v("下采样:当 1080P 的视频在 720P 屏幕上播放时，需要将图像缩小，缩小操作也叫下采样。对于一幅分辨率为 MxN 的图像，对其进行 s 倍下采样，即得到 (M/s)x(N/s) 分辨率的图像（s 应为 M、N 的公约数），就是把原始图像 sxs 窗口内的图像变成一个像素，这个像素点的值就是窗口内所有像素的均值。")])]),t._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[t._v("比特率（也叫码率）")])]),t._v(" "),_("blockquote",[_("p",[t._v("定义：指单位时间播放音频或视频的比特数，单位为 bps , 即 bits per second，每秒传输的数据量，常用单位有：kbps、mbps 等。\n公式：码率（kbps）= 文件大小（kb）/ 时长（s）\n静态比特率（Constant Bit Rate）：使用恒定比特率输出图像。\n动态比特率（Variable Bit Rate）：比特率可以随着图像复杂程度的不同而随之变化，图像内容简单的片段采用较小的码率，图像内容复杂的片段采用较大的码率。")])]),t._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[_("p",[t._v("帧: 是视频的一个基本概念，表示一张画面，一个视频就是由许许多多个画面(帧)组成的。")])]),t._v(" "),_("li",[_("p",[t._v("帧率")])])]),t._v(" "),_("blockquote",[_("p",[t._v("定义：指单位时间播放视频的帧数，单位为 fps , 即 Frames per Second，或者Hz。\n帧率越高，画面越流畅、逼真，对显卡的处理能力要求越高。")])]),t._v(" "),_("p",[t._v("为什么 24fps 的电影感觉流畅，而 24fps 的游戏就感觉很卡呢？\n"),_("strong",[t._v("第一个原因：两者图像生成原理不同")]),t._v("\n电影的一帧在一段时间曝光，每一帧都包含一段时间的信息，而游戏的画面则是由显卡计算生成的，一帧只包含那一瞬间的信息。")]),t._v(" "),_("p",[_("strong",[t._v("第二个原因：电影的FPS是稳定的，而游戏则是不稳定的")]),t._v("\n电影若为 24fps，那就表示每隔 1/24 秒刷新一次画面，帧间隔是固定的。\n游戏若为 60fps，表示大约每隔 1/60 秒刷新一次画面，帧间隔是不稳定的，即使 1 秒能显示 60 帧，那也可能是前半秒显示了 59 帧，后半秒显示了 1 帧。")]),t._v(" "),_("ol",{attrs:{start:"6"}},[_("li",[t._v("色彩空间")])]),t._v(" "),_("p",[t._v("常用的两种色彩空间：RGB 、YUV\nRGB和YUV的换算：\nY = 0.299R ＋ 0.587G ＋ 0.114B\nU = －0.147R － 0.289G ＋ 0.436B\nV = 0.615R － 0.515G － 0.100B")]),t._v(" "),_("p",[t._v("R = Y ＋ 1.14V\nG = Y － 0.39U － 0.58V\nB = Y ＋ 2.03U")]),t._v(" "),_("h3",{attrs:{id:"数字化音频基础知识"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数字化音频基础知识"}},[t._v("#")]),t._v(" 数字化音频基础知识")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("声音的数字化过程：采样、量化、编码")])]),t._v(" "),_("li",[_("p",[t._v("经过数字化后的数字音频包含以下三要素：采样率、量化位深、声道数")])]),t._v(" "),_("li",[_("p",[t._v("常见的声道类型：单声道、立体声、5.1声道（早期电影院）、7.1声道（现代电影院）")])]),t._v(" "),_("li",[_("p",[t._v("数字音频数据最常见的格式叫PCM(脉冲编码调制)，是未经压缩的音频采样数据裸流，它是由模拟信号经过采样、量化、编码转换成的标准数字音频数据。")])]),t._v(" "),_("li",[_("p",[t._v("常见的音频编码格式：MP3、AAC、OPUS，它实际上是对数字音频数据进行压缩编码以方便传输。")])])]),t._v(" "),_("h3",{attrs:{id:"视频"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#视频"}},[t._v("#")]),t._v(" 视频")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("视频编码：通过特定的压缩技术，将某个视频格式的文件转换成另一种视频格式。视频数据在时域和空域层面都有极强的相关性，这也表示有大量的「时域冗余信   息」和「空域冗余信息」，压缩技术就是去掉数据中的冗余信息。")])]),t._v(" "),_("li",[_("p",[t._v("视频编码分为无损编码和有损编码。\n无损编码：也称为可逆编码，重构后的数据与原数据完全相同，适用于磁盘文件的压缩等。无损压缩主要采用熵编码方式，包括香农编码、哈夫曼编码和算术编码等。\n有损编码：也称为不可逆编码，重构后的数据与原数据有差异，适用于任何允许有失真的场景，例如视频会议、可视电话、视频广播、视频监控等。")])]),t._v(" "),_("li",[_("p",[t._v("视频编码标准：为了能使音视频在不同的设备上或者媒体上进行传播，需要对编码格式规范化、标准化。\n视频编码标准主要由两大正式组织制定：\nISO/IEC 制定：MPEG-1、MPEG-2、MPEG-4、MPEG-7、MPEG-21 和 MPEG-H 等。\nITU-T 制定：H.261、H.262、H.263、H.264 和 H.265 等。\nMPEG-x 和 H.26x 标准的视频编码都是采用有损压缩的混合编码方式，主要区别在于处理图像的分辨率、预测精度、搜索范围、量化步长等参数的不同，所以其应用场合也不同。")])]),t._v(" "),_("li",[_("p",[t._v("视频中的三种帧：\nI帧：即关键帧，为视频中完整的一帧，解码时只需要本帧数据就可以完成，不需要参考其他画面，数据量比较大。\nP帧：即前向预测帧，记录当前帧跟上一关键帧（P帧）的差别，解码时依赖关键帧叠加上本帧定义的差别，才能生成最终画面，数据量较I帧小很多；\nB帧：即双向预测编码帧，记录当前帧跟前后帧的差别，解码时依赖前面的I帧（或P帧）和后面的P帧，数据量比I帧和P帧小很多。\n我们看到的一段视频可能是这样的：")])])]),t._v(" "),_("p",[t._v("参考：\n"),_("a",{attrs:{href:"https://mp.weixin.qq.com/s/lexAVx_O3Kz3-51OZ3TlLw",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://mp.weixin.qq.com/s/lexAVx_O3Kz3-51OZ3TlLw"),_("OutboundLink")],1),t._v(" "),_("a",{attrs:{href:""}})])])}),[],!1,null,null,null);s.default=r.exports}}]);